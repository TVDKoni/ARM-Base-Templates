{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"namePrefix": {
			"type": "string",
			"minLength": 3,
			"maxLength": 7,
			"metadata": {
				"description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
			},
			"defaultValue": "ttvdsol"
		},
		"storageAccountType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Type of new Storage Accounts (Standard_LRS, Standard_GRS, Standard_RAGRS or Premium_LRS) to be created to store VM disks"
			},
			"defaultValue": "Standard_LRS"
		},
		"vmSize": {
			"type": "string",
			"metadata": {
				"description": "Size of the S2D VMs to be created"
			},
			"defaultValue": "Standard_DS1_v2"
		},
		"vmCount": {
			"type": "int",
			"minValue": 1,
			"maxValue": 3,
			"metadata": {
				"description": "Number of S2D VMs to be created in cluster (Min=2, Max=3)"
			}
		},
		"vmDiskSize": {
			"type": "int",
			"minValue": 128,
			"maxValue": 1023,
			"metadata": {
				"description": "Size of each data disk in GB on each S2D VM (Min=128, Max=1023)"
			},
			"defaultValue": 1023
		},
		"vmDiskCount": {
			"type": "int",
			"minValue": 1,
			"maxValue": 32,
			"metadata": {
				"description": "Number of data disks on each S2D VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
			},
			"defaultValue": 2
		},
		"adminPassword": {
			"type": "securestring",
			"minLength": 12,
			"metadata": {
				"description": "Password for the Administrator account of the existing Active Directory Domain"
			}
		},
		"osVersion": {
			"metadata": {
				"description": "The OS version to use for the IaaS"
			},
			"type": "string",
			"allowedValues": [
				"2012R2",
				"2016"
			],
			"defaultValue": "2016"
		},
		"existingVirtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "Name of the existing VNET."
			}
		},
		"existingSubnetName": {
			"type": "string",
			"metadata": {
				"description": "Name of the existing subnet in the existing VNET to which the S2D VMs should be deployed"
			}
		}
	},
	"variables": {
		"baseTemplateUri": "[replace(string(deployment().properties.templateLink.uri),'highPerformanceDeployment.json','')]",
		"subnetRef": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks/subnets',parameters('existingVirtualNetworkName'),parameters('existingSubnetName'))]",
		"sofsName": "[concat(parameters('namePrefix'),'sofs')]",
		"shareName": "[concat(parameters('namePrefix'),'shar')]",
		"adminUsername": "sysadmin",
		"OSVersion": {
			"2012R2": "2012-R2-Datacenter",
			"2016": "2016-Datacenter"
		}
	},
	"resources": [{
			"name": "highPerfDeployment",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"dependsOn": [],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(variables('baseTemplateUri'), 'nestedtemplates/deploy-s2d.json')]"
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"namePrefix": {
						"value": "[parameters('namePrefix')]"
					},
					"adminUsername": {
						"value": "[variables('adminUsername')]"
					},
					"adminPassword": {
						"value": "[parameters('adminPassword')]"
					},
					"storageAccountType": {
						"value": "[parameters('storageAccountType')]"
					},
					"nicSubnetUri": {
						"value": "[variables('subnetRef')]"
					},
					"vmSize": {
						"value": "[parameters('vmSize')]"
					},
					"vmCount": {
						"value": "[parameters('vmCount')]"
					},
					"vmDiskSize": {
						"value": "[parameters('vmDiskSize')]"
					},
					"vmDiskCount": {
						"value": "[parameters('vmDiskCount')]"
					},
					"sofsName": {
						"value": "[parameters('sofsName')]"
					},
					"shareName": {
						"value": "[parameters('shareName')]"
					},
					"imageSKU": {
						"value": "[variables('OSVersion')[parameters('osVersion')]]"
					},
					"baseTemplateUri": {
						"value": "[variables('baseTemplateUri')]"
					}
				}
			}
		}
	]
}
