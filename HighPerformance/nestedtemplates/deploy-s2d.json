{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"namePrefix": {
			"type": "string",
			"minLength": 3,
			"maxLength": 7,
			"metadata": {
				"description": "Naming prefix for each new resource created. 3-char min, 7-char max, lowercase alphanumeric"
			}
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Name of the Administrator of the existing Active Directory Domain"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"minLength": 12,
			"metadata": {
				"description": "Password for the Administrator account of the existing Active Directory Domain"
			}
		},
		"storageAccountType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Type of new Storage Accounts (Standard_LRS, Standard_GRS, Standard_RAGRS or Premium_LRS) to be created to store VM disks"
			}
		},
		"nicSubnetUri": {
			"type": "string",
			"metadata": {
				"description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
			}
		},
		"vmSize": {
			"type": "string",
			"metadata": {
				"description": "Size of the S2D VMs to be created"
			}
		},
		"vmCount": {
			"type": "int",
			"minValue": 1,
			"maxValue": 3,
			"metadata": {
				"description": "Number of S2D VMs to be created in cluster (Min=2, Max=3)"
			}
		},
		"vmDiskSize": {
			"type": "int",
			"minValue": 128,
			"maxValue": 1023,
			"metadata": {
				"description": "Size of each data disk in GB on each S2D VM (Min=128, Max=1023)"
			}
		},
		"vmDiskCount": {
			"type": "int",
			"minValue": 1,
			"maxValue": 32,
			"metadata": {
				"description": "Number of data disks on each S2D VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
			}
		},
		"sofsName": {
			"type": "string",
			"metadata": {
				"description": "Name of clustered Scale-Out File Server role"
			}
		},
		"shareName": {
			"type": "string",
			"metadata": {
				"description": "Name of shared data folder on clustered Scale-Out File Server role"
			}
		},
		"imagePublisher": {
			"type": "string",
			"defaultValue": "MicrosoftWindowsServer"
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "WindowsServer"
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "2016-Datacenter"
		},
		"imageVersion": {
			"type": "string",
			"defaultValue": "latest"
		},
		"baseTemplateUri": {
			"type": "string"
		}
	},
	"variables": {
		"apiVersionStorage": "2016-01-01",
		"apiVersionCompute": "2015-06-15",
		"apiVersionNetwork": "2015-06-15",
		"vmNamePrefix": "[concat(parameters('namePrefix'),'serv')]",
		"storageNamePrefix": "[concat(parameters('namePrefix'),'strg')]",
		"witnessStorageName": "[concat(parameters('namePrefix'),'wnes')]",
		"witnessStorageType": "Standard_LRS",
		"vmAvailabilitySetName": "[concat(parameters('namePrefix'),'aset')]",
		"vmLoopTemplateURL": "[concat(parameters('baseTemplateUri'),'/nestedtemplates/newVM.json')]",
		"s2dPrepModulesURL": "[concat(parameters('baseTemplateUri'),'/dsc/prep-s2d.ps1.zip')]",
		"s2dPrepFunction": "PrepS2D.ps1\\PrepS2D",
		"s2dConfigModulesURL": "[concat(parameters('baseTemplateUri'),'/dsc/config-s2d.ps1.zip')]",
		"s2dConfigFunction": "ConfigS2D.ps1\\ConfigS2D"
	},
	"resources": [{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('vmAvailabilitySetName')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"location": "[resourceGroup().location]",
			"properties": {}
		}, {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('witnessStorageName')]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "[variables('witnessStorageType')]"
			},
			"kind": "Storage"
		}, {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('storageNamePrefix'), padLeft(copyindex(1),3,'0'))]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"copy": {
				"name": "storageAccountLoop",
				"count": "[parameters('vmCount')]"
			},
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "[parameters('storageAccountType')]"
			},
			"kind": "Storage"
		}, {
			"name": "[concat(variables('vmNamePrefix'), padLeft(copyindex(1),3,'0'), 'nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"copy": {
				"name": "nicLoop",
				"count": "[parameters('vmCount')]"
			},
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							}
						}
					}
				]
			}
		}, {
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2015-01-01",
			"copy": {
				"name": "virtualMachineLoop",
				"count": "[parameters('vmCount')]"
			},
			"name": "[concat(variables('vmNamePrefix'), padLeft(copyindex(1),3,'0'))]",
			"dependsOn": [
				"storageAccountLoop",
				"nicLoop",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vmLoopTemplateURL')]"
				},
				"parameters": {
					"vmName": {
						"value": "[concat(variables('vmNamePrefix'), padLeft(copyindex(1),3,'0'))]"
					},
					"storageAccountUri": {
						"value": "[reference(concat('Microsoft.Storage/storageAccounts/',variables('StorageNamePrefix'), padLeft(copyindex(1),3,'0')),variables('apiVersionStorage')).primaryEndpoints.blob]"
					},
					"vmAvailabilitySetName": {
						"value": "[variables('vmAvailabilitySetName')]"
					},
					"vmSize": {
						"value": "[parameters('vmSize')]"
					},
					"vmDiskCount": {
						"value": "[parameters('vmDiskCount')]"
					},
					"vmDiskSize": {
						"value": "[parameters('vmDiskSize')]"
					},
					"adminUsername": {
						"value": "[parameters('adminUsername')]"
					},
					"adminPassword": {
						"value": "[parameters('adminPassword')]"
					},
					"baseTemplateUri": {
						"value": "[parameters('baseTemplateUri')]"
					},
					"imagePublisher": {
						"value": "[parameters('imagePublisher')]"
					},
					"imageOffer": {
						"value": "[parameters('imageOffer')]"
					},
					"imageSKU": {
						"value": "[parameters('imageSKU')]"
					},
					"imageVersion": {
						"value": "[parameters('imageVersion')]"
					}
				}
			}
		}
	]
}
